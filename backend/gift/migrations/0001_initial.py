# Generated by Django 5.2 on 2025-05-08 21:14

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="FavouritePerson",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="The date and time when the object was created.",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="The date and time when the object was last modified.",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="The name of the person", max_length=255
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        help_text="The email address of the person", max_length=255
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        help_text="The phone number of the person", max_length=20
                    ),
                ),
                (
                    "birth_date",
                    models.DateField(help_text="Birthday in YYYY‑MM‑DD format"),
                ),
                (
                    "preference_vector",
                    models.JSONField(
                        help_text="A JSON field to store the preference vector for the person"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="The user who added this person to their favourites",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="favourite_persons",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Favourite Person",
                "verbose_name_plural": "Favourite Persons",
                "ordering": ["-created_at"],
                "abstract": False,
                "unique_together": {("name", "email")},
            },
        ),
        migrations.CreateModel(
            name="Gift",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="The date and time when the object was created.",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="The date and time when the object was last modified.",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Product title / name as shown on the merchant site.",
                        max_length=255,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Plain‑text description scraped from the listing.",
                    ),
                ),
                (
                    "url",
                    models.URLField(
                        help_text="Canonical URL to the merchant page.", unique=True
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Price in the merchant's default currency",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "tags",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="List of categorical tags, e.g. ['chocolates', 'toy', 'kids'].",
                    ),
                ),
                (
                    "embedding_vector",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Dense text+image embedding for semantic similarity.",
                    ),
                ),
            ],
            options={
                "ordering": ("-created_at",),
                "abstract": False,
                "indexes": [models.Index(fields=["title"], name="gift_title_idx")],
            },
        ),
        migrations.CreateModel(
            name="GiftEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="The date and time when the object was created.",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="The date and time when the object was last modified.",
                    ),
                ),
                (
                    "sent_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Timestamp when the gift was marked as sent.",
                    ),
                ),
                (
                    "favourite_person",
                    models.ForeignKey(
                        help_text="Recipient of the gift.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="gift_events",
                        to="gift.favouriteperson",
                    ),
                ),
                (
                    "gift",
                    models.ForeignKey(
                        help_text="Gift that was purchased / given.",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="gift.gift",
                    ),
                ),
            ],
            options={
                "ordering": ("-sent_at",),
                "get_latest_by": "sent_at",
                "abstract": False,
                "unique_together": {("favourite_person", "gift")},
            },
        ),
    ]
